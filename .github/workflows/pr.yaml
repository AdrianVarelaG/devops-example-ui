name: PR-CI
on:
  pull_request:
    types: [opened, edited, reopened, synchronize]

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Test
        run: docker build --target test .
      - name: Lint
        run: docker build --target lint .
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push container image
        uses: docker/build-push-action@v2
        with:
          push: true
          target: release
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/devops-example-ui:pr-${{ github.event.pull_request.number }}
      
      - name: Create a cluster
        uses: AbsaOSS/k3d-action@v1.4.0
        with:
          cluster-name: test
          args: >-
            --config k3d.yaml
      - name: Deploy the app
        run: |
          cd kustomize/overlays/preview
          kustomize edit set image ${{ secrets.DOCKERHUB_USERNAME }}/devops-example-ui=${{ secrets.DOCKERHUB_USERNAME }}/devops-example-ui:pr-${{ github.event.pull_request.number }}
          kustomize build | kubectl apply --filename -
          kubectl rollout status deployment devops-example-ui
      - name: Integration Test
        run: |
          kubectl run test --image alpine -i --restart Never -- sh -c "apk add --update curl && curl devops-example-ui"
